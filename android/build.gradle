apply plugin: 'com.android.library'

group = 'expo.modules.dji'
version = '0.1.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 34)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 21)
      targetSdkVersion safeExtGet("targetSdkVersion", 34)
    }
  }
}

android {
  namespace "expo.modules.dji"
  defaultConfig {
    versionCode 1
    versionName "0.1.0"
    ndk {
      abiFilters "arm64-v8a"
    }
    packagingOptions {
      pickFirst "lib/arm64-v8a/libc++_shared.so"
      pickFirst "lib/armeabi-v7a/libc++_shared.so"

      doNotStrip "*/*/libconstants.so"
      doNotStrip "*/*/libdji_innertools.so"
      doNotStrip "*/*/libdjibase.so"
      doNotStrip "*/*/libDJICSDKCommon.so"
      doNotStrip "*/*/libDJIFlySafeCore-CSDK.so"
      doNotStrip "*/*/libdjifs_jni-CSDK.so"
      doNotStrip "*/*/libDJIRegister.so"
      doNotStrip "*/*/libdjisdk_jni.so"
      doNotStrip "*/*/libDJIUpgradeCore.so"
      doNotStrip "*/*/libDJIUpgradeJNI.so"
      doNotStrip "*/*/libDJIWaypointV2Core-CSDK.so"
      doNotStrip "*/*/libdjiwpv2-CSDK.so"
      doNotStrip "*/*/libFlightRecordEngine.so"
      doNotStrip "*/*/libvideo-framing.so"
      doNotStrip "*/*/libwaes.so"
      doNotStrip "*/*/libagora-rtsa-sdk.so"
      doNotStrip "*/*/libc++.so"
      doNotStrip "*/*/libc++_shared.so"
      doNotStrip "*/*/libmrtc_28181.so"
      doNotStrip "*/*/libmrtc_agora.so"
      doNotStrip "*/*/libmrtc_core.so"
      doNotStrip "*/*/libmrtc_core_jni.so"
      doNotStrip "*/*/libmrtc_data.so"
      doNotStrip "*/*/libmrtc_log.so"
      doNotStrip "*/*/libmrtc_onvif.so"
      doNotStrip "*/*/libmrtc_rtmp.so"
      doNotStrip "*/*/libmrtc_rtsp.so"
    }
  }
  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation "com.dji:dji-sdk-v5-aircraft:5.14.0"
  compileOnly "com.dji:dji-sdk-v5-aircraft-provided:5.14.0"
}
